## 1 Creating/Linking Route

- "App.js"
  => Implemented { Route, Switch } Created Routes

- Crated Route Components
  => "AllQuote.js"
  => "NewQuote.js"
  => "QuoteDetail.js"

- "index.js"
  => { BrowserRouter } to Connect/Activate Routes of "App.js"

////////////////////////////////////////////////////////////////////////////////////////////

## 2 Redirecting Route, Extracting Params

- "App.js"
  => implemented { Redirect } to redirect default/main page

- "QuoteDetail.js"
  => implemented { useParams } to Extract Params from "Route URL"

////////////////////////////////////////////////////////////////////////////////////////////

## 3 Nesting Routes

- "QuoteDetail.js"
  => { Route } to add nested <Route path={`/quotes/${params.quoteId}/comments`}>
  => Using `${Template Literal}` to add params + aditional /Route to the URL
  => Or Alternative => <Route path="/quotes/:quoteId/comments">

////////////////////////////////////////////////////////////////////////////////////////////

## 4 Adding a Layout Wrapper Component

- "MainNavigation.js"
  => Navigation Bar
  => { NavLink } to create links for the Routes

- "Layout.js"
  => Layoput Module to wrapp around "App.js" JSX

////////////////////////////////////////////////////////////////////////////////////////////

## 5 Adding Dummy Data & More Content

- "AllQuotes.js"
  => Added "DUMMY_QUOTES"
  => imported "QuoteList.js" To display Data

- "NewQuote.js"
  => Added Quote Form
  => import "QuoteForm.js" to rended quote form, & pass "addQuoteHandler()" to <QuoteForm>

////////////////////////////////////////////////////////////////////////////////////////////

## 6 Outputting Data on "Details Page"

- "QuoteItem.js"
  => used { Link } to handle "View Fullscreen" button <Link className="btn" to={`/quotes/${props.id}`}>

- "QuoteDetail.js"
  => Added DUMMY_DATA, Find quote by Id, return if (!id)

////////////////////////////////////////////////////////////////////////////////////////////

## 7 Adding a "Not Found" Page

- "NotFound.js"
  => Route module created

- "App.js"
  => using { Route } to display "Not Found" Page
  => <Route path="*"> (any other page)

////////////////////////////////////////////////////////////////////////////////////////////

## 8 Implementing Programmatic (Imperative) Navigation

- "NewQuote.js"
  => implemented { useHistory } to navigate route back/away on "Submit"

--------------------------------------------------------- import { useHistory } from "react-router-dom";
to navigate away on "event"

- ".push" => erases history and creates a new Route with changes (No go back button)
- ".replace" => replace history Route with changes (Can use go back button)

////////////////////////////////////////////////////////////////////////////////////////////

## 9 Preventing Unwanted Route Transitions with "propt" Component

- "QuoteForm.js"
  => Implemented { Prompt } to show prompt/message when form losses focus "onFocus={}"
  => { useState } to toggle { Prompt }

--------------------------------------------------------- import { Prompt } from "react-router-dom";
to alert/prompt message
<Prompt when={true/false} message(() => 'MessageHere') />
